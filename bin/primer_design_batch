#!/usr/bin/perl -w

=head1 NAME

calling primer3 to design primer in batch.

=head1 DESCRIPTION

calling external primer3 program to design primer probes in batch mode.
 
 Author	: Yuanda Lv
 E-mail	: Lyd0527@126.com
 Date	: 10/07/2013
 Version: 1.0
=cut

use strict;
use File::Path;
use File::Spec;
use Getopt::Long;

my $usage = q/
primer_design_batch v1.0 07-10-2013

USAGE:
perl primer_design [-input <FASTA>] [-num <primer number>] [-size_min <Primer_min_size>] [-size_max <Primer_max_size>] 
[-size_opt <Primer_opt_size>] [-tm_min <Primer_min_tm>] [-tm_max <Primer_max_tm>] [-tm_opt <Primer_opt_tm>] 
[-product_range <Primer_product_size_range>] [-threads <threads>] [-output <output>] 

Description:
	
parameter:
-input files
	-input: Fasta-formated nucleotide sequences

-primer_parameters
	-size_min:	Primer_min_size		< default : 18 >
	-size_max:	Primer_max_size		< default : 22 >
	-size_opt:	Primer_opt_size		< default : 20 >

	-tm_min:	Primer_min_Tm		< default : 55 >
	-tm_max:	Primer_max_Tm		< default : 65 >
	-tm_opt:	Primer_opt_Tm		< default : 60 >

	-product_range	Primer_product_size_range < default :150-280 >

-output files
	-output:	output_prefix 	< default :output.list,output_F.fa,output_R.fa >

	
Example: 
perl primer_design_batch -input example.fa -output example
perl primer_design_batch -input example.fa -output example -size_min 16 -size_opt 20 -size_max 24 -product_range 200-400

/;

die $usage."\n" if (@ARGV<1);


#################################################################
#                       Input Parameters			#
#################################################################

my $thermodynamic;
my $input;
my $output;
my $size_min		= "18";
my $size_max		= "22";
my $size_opt		= "20";
my $tm_min			= "55";
my $tm_max			= "65";
my $tm_opt			= "60";
my $product_range	= "150-280";
my $threads			= "20";
my $mismatch		= "3";

GetOptions(
		'input:s'		=>\$input,
		'size_min:i'	=>\$size_min,
		'size_max:i'	=>\$size_max,
		'size_opt:i'	=>\$size_opt,
		'tm_min:i'		=>\$tm_min,
		'tm_max:i'		=>\$tm_max,
		'tm_opt:i'		=>\$tm_opt,
		'product_range:s'=>\$product_range,
		'threads:i'		=>\$threads,
		'mismatch:i'	=>\$mismatch,
		'output:s'		=>\$output,
);

### $input   
### $num			
### $size_min	
### $size_max	
### $size_opt	
### $tm_min		
### $tm_max		
### $tm_opt		
### $product_rang
### $threads		
### $mismatch	
### $output		

#my $home=(getpwuid 501)[7];
#$thermodynamic="/usr/local/bin/primer3_config/";

###########################################################################
#            Generating the configure file for Primer3 program.          #
###########################################################################

open (IN,"<$input") || die ("\nError: Couldn't open source file containing original FASTA sequences !\n\n");
open (OUT1,">p3_setting");
open (OUT2,">p3_input");

$/= ">";


# generate p3_setting file
# include basic primer3 parameter

print OUT1 <<EOF;                                                         
Primer3 File - http://primer3.sourceforge.net
P3_FILE_TYPE=settings

PRIMER_FIRST_BASE_INDEX=1
PRIMER_THERMODYNAMIC_OLIGO_ALIGNMENT=1
PRIMER_THERMODYNAMIC_TEMPLATE_ALIGNMENT=0
PRIMER_PICK_LEFT_PRIMER=1
PRIMER_PICK_INTERNAL_OLIGO=0
PRIMER_PICK_RIGHT_PRIMER=1
PRIMER_LIBERAL_BASE=1
PRIMER_LIB_AMBIGUITY_CODES_CONSENSUS=0
PRIMER_LOWERCASE_MASKING=0
PRIMER_PICK_ANYWAY=1
PRIMER_EXPLAIN_FLAG=1
PRIMER_TASK=generic
PRIMER_MIN_QUALITY=0
PRIMER_MIN_END_QUALITY=0
PRIMER_QUALITY_RANGE_MIN=0
PRIMER_QUALITY_RANGE_MAX=100
PRIMER_MIN_SIZE=$size_min
PRIMER_OPT_SIZE=$size_opt
PRIMER_MAX_SIZE=$size_max
PRIMER_MIN_TM=$tm_min
PRIMER_OPT_TM=$tm_opt
PRIMER_MAX_TM=$tm_max
PRIMER_PAIR_MAX_DIFF_TM=5.0
PRIMER_TM_FORMULA=1
PRIMER_PRODUCT_MIN_TM=-1000000.0
PRIMER_PRODUCT_OPT_TM=0.0
PRIMER_PRODUCT_MAX_TM=1000000.0
PRIMER_MIN_GC=30.0
PRIMER_OPT_GC_PERCENT=50.0
PRIMER_MAX_GC=70.0
PRIMER_PRODUCT_SIZE_RANGE=$product_range
PRIMER_NUM_RETURN=1
PRIMER_MAX_END_STABILITY=9.0
PRIMER_MAX_LIBRARY_MISPRIMING=12.00
PRIMER_PAIR_MAX_LIBRARY_MISPRIMING=20.00
PRIMER_MAX_TEMPLATE_MISPRIMING_TH=40.00
PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING_TH=70.00
PRIMER_MAX_SELF_ANY_TH=45.0
PRIMER_MAX_SELF_END_TH=35.0
PRIMER_PAIR_MAX_COMPL_ANY_TH=45.0
PRIMER_PAIR_MAX_COMPL_END_TH=35.0
PRIMER_MAX_HAIRPIN_TH=24.0
PRIMER_MAX_TEMPLATE_MISPRIMING=12.00
PRIMER_PAIR_MAX_TEMPLATE_MISPRIMING=24.00
PRIMER_MAX_SELF_ANY=8.00
PRIMER_MAX_SELF_END=3.00
PRIMER_PAIR_MAX_COMPL_ANY=8.00
PRIMER_PAIR_MAX_COMPL_END=3.00
PRIMER_MAX_NS_ACCEPTED=0
PRIMER_MAX_POLY_X=4
PRIMER_INSIDE_PENALTY=-1.0
PRIMER_OUTSIDE_PENALTY=0
PRIMER_GC_CLAMP=0
PRIMER_MAX_END_GC=5
PRIMER_MIN_LEFT_THREE_PRIME_DISTANCE=3
PRIMER_MIN_RIGHT_THREE_PRIME_DISTANCE=3
PRIMER_MIN_5_PRIME_OVERLAP_OF_JUNCTION=7
PRIMER_MIN_3_PRIME_OVERLAP_OF_JUNCTION=4
PRIMER_SALT_MONOVALENT=50.0
PRIMER_SALT_CORRECTIONS=1
PRIMER_SALT_DIVALENT=1.5
PRIMER_DNTP_CONC=0.6
PRIMER_DNA_CONC=50.0
PRIMER_SEQUENCING_SPACING=500
PRIMER_SEQUENCING_INTERVAL=250
PRIMER_SEQUENCING_LEAD=50
PRIMER_SEQUENCING_ACCURACY=20
PRIMER_WT_SIZE_LT=1.0
PRIMER_WT_SIZE_GT=1.0
PRIMER_WT_TM_LT=1.0
PRIMER_WT_TM_GT=1.0
PRIMER_WT_GC_PERCENT_LT=0.0
PRIMER_WT_GC_PERCENT_GT=0.0
PRIMER_WT_SELF_ANY_TH=0.0
PRIMER_WT_SELF_END_TH=0.0
PRIMER_WT_HAIRPIN_TH=0.0
PRIMER_WT_TEMPLATE_MISPRIMING_TH=0.0
PRIMER_WT_SELF_ANY=0.0
PRIMER_WT_SELF_END=0.0
PRIMER_WT_TEMPLATE_MISPRIMING=0.0
PRIMER_WT_NUM_NS=0.0
PRIMER_WT_LIBRARY_MISPRIMING=0.0
PRIMER_WT_SEQ_QUAL=0.0
PRIMER_WT_END_QUAL=0.0
PRIMER_WT_POS_PENALTY=0.0
PRIMER_WT_END_STABILITY=0.0
PRIMER_PAIR_WT_PRODUCT_SIZE_LT=0.0
PRIMER_PAIR_WT_PRODUCT_SIZE_GT=0.0
PRIMER_PAIR_WT_PRODUCT_TM_LT=0.0
PRIMER_PAIR_WT_PRODUCT_TM_GT=0.0
PRIMER_PAIR_WT_COMPL_ANY_TH=0.0
PRIMER_PAIR_WT_COMPL_END_TH=0.0
PRIMER_PAIR_WT_TEMPLATE_MISPRIMING_TH=0.0
PRIMER_PAIR_WT_COMPL_ANY=0.0
PRIMER_PAIR_WT_COMPL_END=0.0
PRIMER_PAIR_WT_TEMPLATE_MISPRIMING=0.0
PRIMER_PAIR_WT_DIFF_TM=0.0
PRIMER_PAIR_WT_LIBRARY_MISPRIMING=0.0
PRIMER_PAIR_WT_PR_PENALTY=1.0
PRIMER_PAIR_WT_IO_PENALTY=0.0
PRIMER_INTERNAL_MIN_SIZE=18
PRIMER_INTERNAL_OPT_SIZE=20
PRIMER_INTERNAL_MAX_SIZE=27
PRIMER_INTERNAL_MIN_TM=57.0
PRIMER_INTERNAL_OPT_TM=60.0
PRIMER_INTERNAL_MAX_TM=63.0
PRIMER_INTERNAL_MIN_GC=20.0
PRIMER_INTERNAL_OPT_GC_PERCENT=50.0
PRIMER_INTERNAL_MAX_GC=80.0
PRIMER_INTERNAL_MAX_SELF_ANY_TH=47.00
PRIMER_INTERNAL_MAX_SELF_END_TH=47.00
PRIMER_INTERNAL_MAX_HAIRPIN_TH=47.00
PRIMER_INTERNAL_MAX_SELF_ANY=12.00
PRIMER_INTERNAL_MAX_SELF_END=12.00
PRIMER_INTERNAL_MIN_QUALITY=0
PRIMER_INTERNAL_MAX_NS_ACCEPTED=0
PRIMER_INTERNAL_MAX_POLY_X=5
PRIMER_INTERNAL_MAX_LIBRARY_MISHYB=12.00
PRIMER_INTERNAL_SALT_MONOVALENT=50.0
PRIMER_INTERNAL_DNA_CONC=50.0
PRIMER_INTERNAL_SALT_DIVALENT=1.5
PRIMER_INTERNAL_DNTP_CONC=0.0
PRIMER_INTERNAL_WT_SIZE_LT=1.0
PRIMER_INTERNAL_WT_SIZE_GT=1.0
PRIMER_INTERNAL_WT_TM_LT=1.0
PRIMER_INTERNAL_WT_TM_GT=1.0
PRIMER_INTERNAL_WT_GC_PERCENT_LT=0.0
PRIMER_INTERNAL_WT_GC_PERCENT_GT=0.0
PRIMER_INTERNAL_WT_SELF_ANY_TH=0.0
PRIMER_INTERNAL_WT_SELF_END_TH=0.0
PRIMER_INTERNAL_WT_HAIRPIN_TH=0.0
PRIMER_INTERNAL_WT_SELF_ANY=0.0
PRIMER_INTERNAL_WT_SELF_END=0.0
PRIMER_INTERNAL_WT_NUM_NS=0.0
PRIMER_INTERNAL_WT_LIBRARY_MISHYB=0.0
PRIMER_INTERNAL_WT_SEQ_QUAL=0.0
PRIMER_INTERNAL_WT_END_QUAL=0.0
PRIMER_THERMODYNAMIC_PARAMETERS_PATH=/usr/local/bin/primer3_config/
=

EOF

# generate p3_input file
while (<IN>) {
	chomp;
	next unless (my ($id,$seq) = /(.*?)\n(.*)/s);  # "?" is nice.
	$seq =~ s/[\d\s>]//g;#remove digits, spaces, line breaks,...
    print OUT2 "SEQUENCE_ID=$id\nSEQUENCE_TEMPLATE=$seq\n=\n";
}
close IN;

###########################################################################
#             calling primer3 to design the Primers.                      #
###########################################################################

my $cmd="primer3_core -p3_settings_file=p3_setting -output=p3_output p3_input";

system "$cmd";

###########################################################################
# Parsing the Primer3 results and converting it to table-formated file. #
###########################################################################

open (IN,"<p3_output") || die ("\nError: Couldn't open Primer3 results file (*.p3out) !\n\n");
open (OUT3,">$output.list") || die ("nError: Couldn't create file !\n\n");
open (OUT4,">$output\_1.fa") || die ("nError: Couldn't create file !\n\n");
open (OUT5,">$output\_2.fa") || die ("nError: Couldn't create file !\n\n");

print OUT3 "ID\tForward Primer(5'-3')\tTm\tsize\tReverse Primer(5'-3')\tTm\tsize\tProduct size (bp)\n";
$/ = "=\n";
my $count=0;
while (<IN>){
	if ($_=~m/PRIMER_LEFT_NUM_RETURNED=1/){
		/SEQUENCE_ID=(.*)/; my $id=$1;
		$id=~s/ +/_/g;
		my $info;
		my $left;
		my $right;
		$count++;

		/PRIMER_LEFT_0_SEQUENCE=(\S+)/;  $info .= "$1\t"; $left.=">$id"."\/1\n$1\n";
		/PRIMER_LEFT_0_TM=(.*)/; $info .= "$1\t";
		/PRIMER_LEFT_0=\d+,(\d+)/; $info .= "$1\t";
  
		/PRIMER_RIGHT_0_SEQUENCE=(.*)/;  $info .= "$1\t";$right.=">$id"."\/2\n$1\n";
		/PRIMER_RIGHT_0_TM=(.*)/; $info .= "$1\t";
		/PRIMER_RIGHT_0=\d+,(\d+)/; $info .= "$1\t";
  
		/PRIMER_PAIR_0_PRODUCT_SIZE=(.*)/; $info .= "$1";
#		/PRIMER_LEFT_0=(\d+),\d+/; $info .= "$1\t";
#		/PRIMER_RIGHT_0=(\d+),\d+/; $info .= "$1\t";
		print OUT4 $left;
		print OUT5 $right;
		print OUT3 "$id\t$info\n"
	}
}

print "\nPrimer modelling was successful for $count sequences.\n";

