#!/usr/bin/perl -w

#merge files
use Getopt::Std;

getopts('hvkfi:r:o:e:s:d:', \%opts);

$verbose = $opts{"v"};
$print_keys = $opts{"k"};
$irs = $opts{"i"} || '\s+'; # Input record separator
$kvs = $opts{"r"} || "\t"; # Key/values separator
$ors = $opts{"o"} || "\t"; # Output record separator
$print_filename = $opts{"f"}; # Print file names at the top
$empty = $opts{"e"}; # Treat empty keys. Either put the value of the empty or don't put them at all (default)
$regexp = $opts{"s"}; 
$discard = $opts{"d"};

my $db = {};
my $count=0;
my @order=(); # This is order of the keys in the output

foreach $file (@ARGV)
  {
    open(INFILE, "<$file") or die("$0: Can't open '$file' for reading."); 
    while(<INFILE>)
      {
	chomp;s/^\s+//; # ([\w\d])[^\d\w]+?$/$1/;
        # Apply the regexp
        eval "s/$regexp/g" if $regexp;
        next if defined($discard) && m/^[$discard]/;
	@fields = split(/$irs/, $_, 2);
	if ((@fields+0) != 2)
	  {
	    warn("$0: Couldn't split line '$_' into 'key, value' in '$file'\n");
	    next;
	  }
	($key, $value) = @fields;

	if (exists $db{$key})
	  {
	    $refa = $db{$key};
	    &equalise($refa); # This is to make sure each array has the same number of elements, since some of the files might be missing some of the keys
	    $l = (@{$refa} + 0);
	    if ($l > $count && (@ARGV+0)>1) 
	      {
		# Different behaviour when processing only one file or many files.
		warn ("$0: Key '$key' already exists for file '$file'. Not adding value '$value'.\n");
		next;
	      }
	    push (@{$refa}, $value);
	    $db{$key} = $refa;
	  }
	else
	  {
	    my @a = ();
	    if (not $count) # Processing the first file
	      {
                push(@order, $key);
		@a = ($value);
	      }
	    else
	      {
		# Previous files did not have that key...
		# Decide what to do
		if (defined $empty) # Include the key
		  {
                    push(@order, $key);
		    &equalise(\@a);
		    push(@a, $value)
		  }
		else # Don't include the key
		  {
		    next;
		  }
	      }
	    $db{$key} = \@a;
	  }
      }
    close(INFILE);
    $count++;
  }

$"=$ors;

if ($print_filename) 
  {
    # print "Key".$kvs if $print_keys;
    print "".$kvs if $print_keys;
    print "@ARGV\n";

  }

foreach $key (@order)
  { 
    $value = $db{$key};
    &equalise($value);
    if (!defined $empty)
      {
	# If the last file did not have the element, don't print it.
	next if ((@{$value}+0)<$count);
      }
    print "$key".$kvs if $print_keys;
    print "@{$value}\n";
  }

sub equalise()
  {
    # For the given array, equalise the number of elements, if $defined empty
    local $refa = $_[0];
    if (defined $empty)
      {
	$l = (@{$refa} + 0);
	foreach ($l..($count-1)) 
	  {
	    push (@{$refa}, $empty);
	  }
	
      }
  }

sub log()
  {
    warn("$0: @_ \n") if $verbose;
  }

