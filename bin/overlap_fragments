#!/usr/bin/perl 

=head1 NAME

Overlap_Fragments - generate overlap fragments using window sliding algorithm.

=head1 DESCRIPTION

Aim to extract overlap fragment for probe designing.
 
 Author	: Yuanda Lv
 E-mail	: Lyd0527@126.com
 Date	: 20/05/2012
 Version: 1.0
=cut

use strict;
use Getopt::Long;

my $usage = q/
overlap_fragments v1.0 20-05-2012

USAGE:

perl overlap_fragments [-i input] [-o output] [-w window size] [-s step size]

Description:
	
parameter:
-i	input:Fasta-formated nucleotide sequences
-o	output
-w	window size
-s	step size
	
Example: perl overlap_framents -i seq.fa -o seq_fragment.fa -w 300 -s 100
/;

die $usage."\n" if (@ARGV<1);

my $input;
my $output;
my $win_size= 300;
my $step_size= 100;
my $num;
GetOptions(
	'i:s'	=>\$input,
	'o:s'	=>\$output,
	'w:n'	=>\$win_size,
	's:n'	=>\$step_size,
);

open (IN,"<$input") or die "Failed to open file $input\n";
open (OUT,">$output") || die "cannot open the file, please check it!\n";

$/ = ">";
while (<IN>){
	chomp;
	my $count=1;
	my $start;
	my $fragment;
	my ($head, $seq) = (split /\n/,$_,2)[0,1];
	$head=~ s/\s+/_/g;
	$seq =~ s/\n//g;
	my $length=length($seq);
	for ($start=0;$start<$length;$start=$start+$step_size,$count=$count+1){
		$fragment=substr($seq,$start,$win_size);
		print OUT ">$head"."_".$count."\n".$fragment."\n";
	}
}
close IN;

