#!/usr/bin/perl

=head1 NAME

mapping - mapping to reference genome/assemblied contigs by paired-end mapping method.

=head1 DESCRIPTION

Aim to extract targeted fragment sizes.
 
 Author	: Yuanda Lv
 E-mail	: Lyd0527@126.com
 Date	: 10/07/2013
 Version: 1.0
=cut

use strict;
use Getopt::Long;

my $usage = q/
mapping v1.0 10-07-2013

USAGE:

mapping [-i probes_prefix] [-o output_prefix] [-d target_prefix][-m mismatch] [-s fragment_size_max] [-t thread]

Description:

parameter:
-i	probes prefix
-o	output prefix
-d	database
-m	num of mismatch (<=3)
-s	maximum fragment size
-t	num of thread
	
Example: mapping -i probes -d scaffolds -o output -m 3 -t 10
/;

die $usage."\n" if (@ARGV<1);

my $input;
my $db;
my $mismatch=0;
my $thread=4;
my $product=800;
my $output;
GetOptions(
	'i:s'	=>\$input,
	'o:s'	=>\$output,
	'd:s'	=>\$db,
	'm:n'	=>\$mismatch,
	's:n'	=>\$product,
	't:n'	=>\$thread,
);

my @list=split(/\//,$db);
my @list2=split(/\./,$list[-1]);

my $formatdb="bowtie-build $db db\/$list2[0] >/dev/null";
my $epcr1="bowtie -f -S -p $thread -a -X $product -v $mismatch $db -1 $input\_1.fa -2 $input\_2.fa | tee $output.sam | grep -v -P '\\*\t0\t0\t\\*|@|\t-' | cut -f 1,9 | awk '!x[\$0]++'|awk '{a[\$1]=a[\$1]\?a[\$1]\",\"\$2:\$2} END{for(i in a)print i\"\\t\"a[i]}'>>$output.sizes";
my $epcr2="bowtie -f -S -p $thread -a -X $product -v $mismatch db\/$list2[0] -1 $input\_1.fa -2 $input\_2.fa | tee $output.sam | grep -v -P '\\*\t0\t0\t\\*|@|\t-'| cut -f 1,9 | awk '!x[\$0]++'|awk '{a[\$1]=a[\$1]\?a[\$1]\",\"\$2:\$2} END{for(i in a)print i\"\\t\"a[i]}'>>$output.sizes";

#print head
`touch $output.sizes`;
`echo -e "ID\t$list[-1]" >$output.sizes`;

if(-e "$db.1.ebwt") {
	system($epcr1);
}elsif(-e "db\/$list2[0].1.ebwt"){
	system($epcr2);
}else{
	`mkdir -p db`;
	printf "bowtie_db doesn't exist. formatting it now\n";
	system($formatdb);
	system($epcr2);
}


